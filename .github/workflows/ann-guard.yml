name: ann-guard
on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]
jobs:
  lint:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: '3.11' }
      - run: python -m pip install --upgrade pip ruff
      - run: ruff format --check scripts
      - run: ruff check scripts
  receipts:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: '3.11' }
      - name: Deps
        run: pip install numpy faiss-cpu
      - name: DIAG
        run: |
          python scripts/ann_diag.py ^
            --input clarity_clean_analysis/02_output/index.npy ^
            --ids   clarity_clean_analysis/02_output/index.ids.json ^
            --dim 1024 --k 10 --samples 200 ^
            --modes faiss_truth,faiss_flat ^
            --receipt binder_receipts/ann_diag.json
      - name: VERIFY via DIAG
        run: |
          python scripts/ann_verify_via_diag.py ^
            --input clarity_clean_analysis/02_output/index.npy ^
            --ids   clarity_clean_analysis/02_output/index.ids.json ^
            --dim 1024 ^
            --diag_script scripts/ann_diag.py ^
            --diag_receipt binder_receipts/ann_diag.json ^
            --verify_receipt binder_receipts/swap_verify.json
      - name: Gates
        shell: python
        run: |
          import json, sys
          diag = json.load(open("binder_receipts/ann_diag.json","r",encoding="utf-8"))
          swap = json.load(open("binder_receipts/swap_verify.json","r",encoding="utf-8"))
          ok = diag["overlap"]["faiss_truth_vs_faiss_flat"] >= 0.99 and swap["faiss"]["p95_ms"] <= 150
          print("DIAG overlap:", diag["overlap"]["faiss_truth_vs_faiss_flat"])
          print("VERIFY p95:", swap["faiss"]["p95_ms"])
          sys.exit(0 if ok else 1)
  guard-binaries:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Block large ANN binaries
        run: |
          set -e
          bad=$(git ls-files | grep -E 'clarity_clean_analysis/02_output/.*\.(ivf|bin)$' || true)
          test -z "$bad" || (echo "Refuse tracked ANN binaries:" && echo "$bad" && exit 1)
